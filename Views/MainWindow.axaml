<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:LoupixDeck.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Width="850" Height="400"
        WindowStartupLocation="CenterScreen"
        x:Class="LoupixDeck.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        d:DataContext="{d:DesignInstance Type=vm:MainWindowViewModel, IsDesignTimeCreatable=True}"
        Icon="avares://LoupixDeck/Assets/logo.ico"
        Title="LoupixDeck"
        x:Name="RootWindow">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Grid ColumnDefinitions="150,500,150,50" RowDefinitions="300,30,50">
        <Grid Grid.Row="0"
              Grid.Column="0"
              HorizontalAlignment="Center"
              RowDefinitions="100,100,100"
              ColumnDefinitions="100,50">
            <Button
                Grid.Column="0"
                Grid.Row="0"
                HorizontalAlignment="Center"
                Width="90"
                Height="90"
                Background="Transparent"
                Command="{Binding RotaryButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentRotaryButtonsPage.RotaryButtons[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <Button.Styles>
                    <!-- Standard-Zustand -->
                    <Style Selector="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- MouseOver -->
                    <Style Selector="Button:pointerover">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Fokus (wenn der Button aktiv ist, z. B. nach einem Dialog) -->
                    <Style Selector="Button:focus">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Geklickt/Hold-Zustand -->
                    <Style Selector="Button:pressed">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="DarkGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>
                </Button.Styles>
                <Border Background="Transparent" Width="90" Height="90" CornerRadius="50">
                    <Image Source="{SvgImage avares://LoupixDeck/Assets/dial.svg}" Stretch="UniformToFill"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </Border>
            </Button>
            <Button
                Grid.Column="0"
                Grid.Row="1"
                HorizontalAlignment="Center"
                Width="90"
                Height="90"
                Background="Transparent"
                Command="{Binding RotaryButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentRotaryButtonsPage.RotaryButtons[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <Button.Styles>
                    <!-- Standard-Zustand -->
                    <Style Selector="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- MouseOver -->
                    <Style Selector="Button:pointerover">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Fokus (wenn der Button aktiv ist, z. B. nach einem Dialog) -->
                    <Style Selector="Button:focus">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Geklickt/Hold-Zustand -->
                    <Style Selector="Button:pressed">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="DarkGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>
                </Button.Styles>
                <Border Background="Transparent" Width="90" Height="90" CornerRadius="50">
                    <Image Source="{SvgImage avares://LoupixDeck/Assets/dial.svg}" Stretch="UniformToFill"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </Border>
            </Button>
            <Button
                Grid.Column="0"
                Grid.Row="2"
                HorizontalAlignment="Center"
                Width="90"
                Height="90"
                Background="Transparent"
                Command="{Binding SimpleButtonCommand}"
                CommandParameter="{Binding LoupeDeck.SimpleButtons[0]}">
                <Button.Styles>
                    <!-- Standard-Zustand -->
                    <Style Selector="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- MouseOver -->
                    <Style Selector="Button:pointerover">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Fokus (wenn der Button aktiv ist, z. B. nach einem Dialog) -->
                    <Style Selector="Button:focus">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Geklickt/Hold-Zustand -->
                    <Style Selector="Button:pressed">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="DarkGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>
                </Button.Styles>
                <Border Background="Transparent" Width="90" Height="90" CornerRadius="50">
                    <Image Source="{Binding LoupeDeck.SimpleButtons[0].RenderedImage}" />
                </Border>
            </Button>

            <StackPanel Width="30"
                        Margin="0,6,0,0"
                        Grid.Row="0"
                        Grid.Column="1"
                        Grid.RowSpan="3"
                        HorizontalAlignment="Left"
                        Orientation="Vertical">
                <ItemsControl ItemsSource="{Binding LoupeDeck.RotaryButtonPages}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Content="{Binding Page}"
                                    Command="{Binding ViewModel.RotaryPageButtonCommand, ElementName=RootWindow}"
                                    CommandParameter="{Binding Page}"
                                    Width="30" Height="30" CornerRadius="8"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center">
                                <Button.Background>
                                    <MultiBinding Converter="{StaticResource PageSelectionConverter}">
                                        <Binding Path="IsSelected" />
                                        <Binding Path="Page" />
                                    </MultiBinding>
                                </Button.Background>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Button Content="+"
                        Width="30"
                        Height="30"
                        CornerRadius="8"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Command="{Binding AddRotaryPageCommand}" />
                <Button Content="x"
                        Width="30"
                        Height="30"
                        CornerRadius="8"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Command="{Binding DeleteRotaryPageCommand}" />
            </StackPanel>
        </Grid>

        <Grid Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" ColumnDefinitions="100,100,100,100,100"
              RowDefinitions="100,100,100">

            <!-- Reihe 1 -->
            <Button
                Grid.Row="0"
                Grid.Column="0"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[0]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[0].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="0"
                Grid.Column="1"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[1]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[1].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="0"
                Grid.Column="2"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[2]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[2].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="0"
                Grid.Column="3"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[3]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[3].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="0"
                Grid.Column="4"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[4]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[4].RenderedImage}" />
            </Button>

            <!-- Reihe 2 -->
            <Button
                Grid.Row="1"
                Grid.Column="0"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[5]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[5].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="1"
                Grid.Column="1"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[6]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[6].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="1"
                Grid.Column="2"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[7]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[7].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="1"
                Grid.Column="3"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[8]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[8].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="1"
                Grid.Column="4"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[9]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[9].RenderedImage}" />
            </Button>

            <!-- Reihe 3 -->
            <Button
                Grid.Row="2"
                Grid.Column="0"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[10]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[10].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="2"
                Grid.Column="1"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[11]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[11].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="2"
                Grid.Column="2"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[12]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[12].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="2"
                Grid.Column="3"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[13]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[13].RenderedImage}" />
            </Button>
            <Button
                Grid.Row="2"
                Grid.Column="4"
                Width="90"
                Height="90"
                Command="{Binding TouchButtonCommand}"
                CommandParameter="{Binding LoupeDeck.CurrentTouchButtonPage[14]}">
                <Image Source="{Binding LoupeDeck.CurrentTouchButtonPage[14].RenderedImage}" />
            </Button>
        </Grid>

        <Grid Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center" RowDefinitions="100,100,100,30">
            <Button
                Grid.Row="0"
                Grid.Column="0"
                Width="90"
                Height="90"
                Background="Transparent"
                Command="{Binding SimpleButtonCommand}" CommandParameter="{Binding LoupeDeck.SimpleButtons[1]}">
                <Button.Styles>
                    <!-- Standard-Zustand -->
                    <Style Selector="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- MouseOver -->
                    <Style Selector="Button:pointerover">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Fokus (wenn der Button aktiv ist, z. B. nach einem Dialog) -->
                    <Style Selector="Button:focus">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Geklickt/Hold-Zustand -->
                    <Style Selector="Button:pressed">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="DarkGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>
                </Button.Styles>
                <Border Background="Transparent" Width="90" Height="90" CornerRadius="50">
                    <Image Source="{Binding LoupeDeck.SimpleButtons[1].RenderedImage}" />
                </Border>
            </Button>
            <Button
                Grid.Row="1"
                Grid.Column="0"
                Width="90"
                Height="90"
                Background="Transparent"
                Command="{Binding SimpleButtonCommand}" CommandParameter="{Binding LoupeDeck.SimpleButtons[2]}">
                <Button.Styles>
                    <!-- Standard-Zustand -->
                    <Style Selector="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- MouseOver -->
                    <Style Selector="Button:pointerover">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Fokus (wenn der Button aktiv ist, z. B. nach einem Dialog) -->
                    <Style Selector="Button:focus">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Geklickt/Hold-Zustand -->
                    <Style Selector="Button:pressed">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="DarkGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>
                </Button.Styles>
                <Border Background="Transparent" Width="90" Height="90" CornerRadius="50">
                    <Image Source="{Binding LoupeDeck.SimpleButtons[2].RenderedImage}" />
                </Border>
            </Button>
            <Button
                Grid.Row="2"
                Grid.Column="0"
                Width="90"
                Height="90"
                Background="Transparent"
                Command="{Binding SimpleButtonCommand}" CommandParameter="{Binding LoupeDeck.SimpleButtons[3]}">
                <Button.Styles>
                    <!-- Standard-Zustand -->
                    <Style Selector="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- MouseOver -->
                    <Style Selector="Button:pointerover">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Fokus (wenn der Button aktiv ist, z. B. nach einem Dialog) -->
                    <Style Selector="Button:focus">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="LightGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>

                    <!-- Geklickt/Hold-Zustand -->
                    <Style Selector="Button:pressed">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="DarkGray" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Border.CornerRadius" Value="50" />
                    </Style>
                </Button.Styles>
                <Border Background="Transparent" Width="90" Height="90" CornerRadius="50">
                    <Image Source="{Binding LoupeDeck.SimpleButtons[3].RenderedImage}" />
                </Border>
            </Button>
        </Grid>

        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
            <ItemsControl ItemsSource="{Binding LoupeDeck.TouchButtonPages}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding Page}"
                                Command="{Binding ViewModel.TouchPageButtonCommand, ElementName=RootWindow}"
                                CommandParameter="{Binding Page}"
                                Width="30" Height="30" CornerRadius="8"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center">
                            <Button.Background>
                                <MultiBinding Converter="{StaticResource PageSelectionConverter}">
                                    <Binding Path="IsSelected" />
                                    <Binding Path="Page" />
                                </MultiBinding>
                            </Button.Background>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Button Content="+"
                    Width="30"
                    Height="30"
                    CornerRadius="8"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding AddTouchPageCommand}" />
            <Button Content="x"
                    Width="30"
                    Height="30"
                    CornerRadius="8"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{Binding DeleteTouchPageCommand}" />
        </StackPanel>
        <Button Grid.Row="0" Grid.Column="3" VerticalAlignment="Top" HorizontalAlignment="Left" VerticalContentAlignment="Top"
                Width="50"
                Height="50"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0">
            <Image Source="{SvgImage avares://LoupixDeck/Assets/hamburger.svg}" Stretch="Uniform" />
            <Button.Flyout>
                <Flyout Placement="Left">
                    <StackPanel>
                        <Button Content="Settings"
                                Command="{Binding SettingsMenuCommand}" />
                    </StackPanel>
                </Flyout>
            </Button.Flyout>
        </Button>
        <Slider Grid.Column="1" Grid.Row="2" Minimum="0" Maximum="1" TickFrequency="0.1"
                IsSnapToTickEnabled="True" Value="{Binding LoupeDeck.Brightness}" />
    </Grid>
</Window>